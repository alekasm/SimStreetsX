This notes text file has a random assortment of information that may
or may not be used directly in the future by the SimStreetsX patcher. It
is meant to keep track of my findings regarding the engine.


----- Functions -----
0x4AB3D0 = Render Update Function
0x450F40 = UI Rendering (Radar, Gauges, etc)
0x49A7F0 = Returns the result of 0xA0B824 (View Angle)


----- Global Variables -----
0xB27A58:
Should Render World. 0 = true, 1 = false

0xA0B824:
View Angle. 0 = cockpit, 1 - 5 = camera view outside
Technically it's [0xA0B820 + 0x4] (unsure why this is in disassembly)

0x5E79B0/4:
Speedometer x/y values


Called in 4A9BA5:
base (esi + offset)

0x5E6A88 = menu model rendering base - variables not access directly so in IDA they are shown as undefined. They are dwords.
0x5E6A90/A94 = menu model scale (keep at 640x480)
0x5E6A9C/AA0 = menu model view resolution (width/height)

0x5E7878 = game rendering base
0x5E7880/884 = rendering area (width/height)
0x5E788C/890 = rendering resolution (width/height)

----- High Resolution Issues -----

1. Main issue on higher resolution is various crashes. The most reliable patch so far
is to jump over function 0x4B3B00 in function 0x4AB7B0 at location 0x4AB906. 

Change:
cmp byte_89633C, bl
jnz loc_4AB92D

To:
nop
jmp loc_4AB92D

Still need to investigate why 0x4B3B00 is and what the effects of not calling it are.

2. Investigate the following series of rendering functions/variables:

0x4AB3D0:
Resets various variables besed on time, currently on a 2000ms check. The "main
variables" in this is 0x6293E4 and 0xB27A58. If both are not active, the other
rendering functions return almost immediately.

0x4AB410/0x4AB550 (not called in Single Player?):
These functions have a very similar design except 

0x4AB410 calls another function: 0x4ABC00
0x4AB550 instead calls function: 0x4AC030

Both functions have some check against the number "15000"

0x4AB7B0:
Seems to be the "main" rendering function of sorts, and it's the only function that willa ctually reset 0x6293E4. 
This function contains both the show_debug variable and 0x4B3B00, the function which crashes on higher resolutions.


3. Investigate why the skybox doesn't render the full width of the screen in high resolution, high textures - 
however it renders correctly (full width) in high resolution, low, low/high textures.

Apparently the calculation for skybox width/height = width (width), height (height-(width-360))


4. The menus are based off calcuations from the 0x5E6A88 menu model base, function 0x4AB38F for populating a vector
of width values, and instructions that access the first index of the vector values:
0x4C2C04 - I believe for the car lot (top-down)
0x4B7B4C - I believe for the car view  (rotation)

The solution is likely mixing the menu model offsets, the vector populator function, and the two instructions
above (setting it statically to either 640 or some higher width)

----- Game Problems -----

Currently in the main rendering function (0x4AB7B0), an exception is sometimes thrown on the call to dword_B27A48 - 
0x4AB7B0 + 1F6 (0x4AB9A6). This appears to be a call to a function pointer which can be some (but perhaps not all)
of the following functions:

0x4C3890
0x4C4D58
0x4B7A78

The exception is thrown in 0x4B7A78 when there is an issue determining physics for your vehicle. I usually throw
an exception here when I run my car into a light pole in a lot of other car props. Investigating the root cause of 
this issue is difficult.




4A3680 = voodoo rush patch version?